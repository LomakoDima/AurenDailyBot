# post_generator.py | MIT License | 2025 | author: DimaLab
import random
import logging
from datetime import datetime
from openai import AsyncOpenAI
from .config import Config
from .image_generator import ImageGenerator

logger = logging.getLogger(__name__)


class PostGenerator:
    def __init__(self):
        self.client = AsyncOpenAI(api_key=Config.OPENAI_API_KEY)
        self.image_generator = ImageGenerator()
        self.prompts = {
            'motivation': self._get_motivation_prompt(),
            'fact': self._get_fact_prompt(),
            'meme': self._get_meme_prompt(),
            'devlog': self._get_devlog_prompt()
        }

    def _get_motivation_prompt(self):
        return """
        –¢—ã - –∞–≤—Ç–æ—Ä Telegram-–∫–∞–Ω–∞–ª–∞ "–¢–∞–≤–µ—Ä–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞". 
        –°–æ–∑–¥–∞–π –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–π —É—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ—Å—Ç –æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.

        –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
        - –ù–∞—á–∏–Ω–∞–π —Å "üåÖ –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –¢–∞–≤–µ—Ä–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞!"
        - –î–∞–ª–µ–µ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å—Ç–∏–ª–µ —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–æ–≥–æ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è
        - –î–ª–∏–Ω–∞: 3-5 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
        - –¢–æ–Ω: –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π, –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π, —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π
        - –° —ç–º–æ–¥–∑–∏ (—É–º–µ—Ä–µ–Ω–Ω–æ)
        - –ó–∞–∫–æ–Ω—á–∏ —Ü–∏—Ç–∞—Ç–æ–π –≤ –∫–∞–≤—ã—á–∫–∞—Ö –∏ —É–∫–∞–∑–∞–Ω–∏–µ–º –∞–≤—Ç–æ—Ä–∞
        - –¢–µ–º–∞—Ç–∏–∫–∞: –º–æ—Ç–∏–≤–∞—Ü–∏—è –≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏, –ø—Ä–µ–æ–¥–æ–ª–µ–Ω–∏–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–µ–π, —Ä–æ—Å—Ç –∫–∞–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
        - –í –∫–æ–Ω—Ü–µ –¥–æ–±–∞–≤—å —Ö–µ—à—Ç–µ–≥–∏: #dev #morningdev #motivation #discipline

        –§–æ—Ä–º–∞—Ç –ø–æ—Å—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ:
        üåÖ –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –¢–∞–≤–µ—Ä–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞!
        [–ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ]
        "[–í–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∞—è —Ü–∏—Ç–∞—Ç–∞]"
        ‚Äî [–ê–≤—Ç–æ—Ä]

        [—Ö–µ—à—Ç–µ–≥–∏]
        """

    def _get_fact_prompt(self):
        return """
        –¢—ã - –∞–≤—Ç–æ—Ä Telegram-–∫–∞–Ω–∞–ª–∞ "–¢–∞–≤–µ—Ä–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞".
        –°–æ–∑–¥–∞–π –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π IT-—Ñ–∞–∫—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.

        –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
        - –î–ª–∏–Ω–∞: 3-5 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
        - –¢–æ–Ω: –ø–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å–Ω—ã–π, —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π
        - –° —ç–º–æ–¥–∑–∏ (—É–º–µ—Ä–µ–Ω–Ω–æ)
        - –¢–µ–º–∞—Ç–∏–∫–∞: –∏—Å—Ç–æ—Ä–∏—è IT, –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã –æ —è–∑—ã–∫–∞—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–æ–º–ø–∞–Ω–∏—è—Ö, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö
        - –í –∫–æ–Ω—Ü–µ –¥–æ–±–∞–≤—å —Ö–µ—à—Ç–µ–≥–∏: #dev #morningdev #motivation #discipline

        –†–∞—Å—Å–∫–∞–∂–∏ —á—Ç–æ-—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ, —á—Ç–æ –º–æ–∂–µ—Ç —É–¥–∏–≤–∏—Ç—å –¥–∞–∂–µ –æ–ø—ã—Ç–Ω—ã—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.
        """

    def _get_meme_prompt(self):
        return """
        –¢—ã - –∞–≤—Ç–æ—Ä Telegram-–∫–∞–Ω–∞–ª–∞ "–¢–∞–≤–µ—Ä–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞".
        –°–æ–∑–¥–∞–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –º–µ–º –æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.

        –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
        - –î–ª–∏–Ω–∞: 2-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        - –¢–æ–Ω: —é–º–æ—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π, –∏—Ä–æ–Ω–∏—á–Ω—ã–π
        - –° —ç–º–æ–¥–∑–∏ (—É–º–µ—Ä–µ–Ω–Ω–æ)
        - –¢–µ–º–∞—Ç–∏–∫–∞: —Ç–∏–ø–∏—á–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤, –±–∞–≥–∏, –¥–µ–¥–ª–∞–π–Ω—ã, –∫–æ–¥-—Ä–µ–≤—å—é
        - –í –∫–æ–Ω—Ü–µ –¥–æ–±–∞–≤—å —Ö–µ—à—Ç–µ–≥–∏: #dev #morningdev #motivation #discipline

        –°–æ–∑–¥–∞–π —á—Ç–æ-—Ç–æ, –Ω–∞–¥ —á–µ–º –∑–∞—Å–º–µ—é—Ç—Å—è –≤—Å–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏, —É–∑–Ω–∞–≤ —Å–µ–±—è.
        """

    def _get_devlog_prompt(self):
        return """
        –¢—ã - –∞–≤—Ç–æ—Ä Telegram-–∫–∞–Ω–∞–ª–∞ "–¢–∞–≤–µ—Ä–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞".
        –°–æ–∑–¥–∞–π devlog –ø–æ—Å—Ç - –∑–∞–º–µ—Ç–∫—É –æ—Ç –ª–∏—Ü–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.

        –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
        - –ù–∞—á–∏–Ω–∞–π —Å —ç–º–æ–¥–∑–∏ —Å–≤–µ—á–∏ –∏–ª–∏ –ª–∞–º–ø—ã
        - –î–ª–∏–Ω–∞: 4-6 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
        - –¢–æ–Ω: –ª–∏—á–Ω—ã–π, —Ä–∞–∑–º—ã—à–ª—è—é—â–∏–π, —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π
        - –° —ç–º–æ–¥–∑–∏ (—É–º–µ—Ä–µ–Ω–Ω–æ)
        - –¢–µ–º–∞—Ç–∏–∫–∞: —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è –æ –∫–æ–¥–µ, –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ, —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–µ, –Ω–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö
        - –í –∫–æ–Ω—Ü–µ –¥–æ–±–∞–≤—å —Ö–µ—à—Ç–µ–≥–∏: #dev #morningdev #motivation #discipline

        –ù–∞–ø–∏—à–∏ –∫–∞–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–ª–∏—Ç—Å—è —Å–≤–æ–∏–º–∏ –º—ã—Å–ª—è–º–∏ –∏ –æ–ø—ã—Ç–æ–º.
        """

    async def generate_post(self, post_type: str = None) -> dict:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ—Å—Ç –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º"""
        if post_type is None:
            post_type = random.choice(Config.POST_TYPES)

        if post_type not in self.prompts:
            raise ValueError(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –ø–æ—Å—Ç–∞: {post_type}")

        try:
            logger.info(f"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Å—Ç–∞ —Ç–∏–ø–∞: {post_type}")

            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞
            response = await self.client.chat.completions.create(
                model=Config.OPENAI_MODEL,
                messages=[
                    {"role": "system", "content": self.prompts[post_type]},
                    {"role": "user", "content": "–°–æ–∑–¥–∞–π –ø–æ—Å—Ç"}
                ],
                max_tokens=300,
                temperature=0.8
            )

            post_content = response.choices[0].message.content.strip()

            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø–æ—Å—Ç–æ–≤
            image_url = None
            if post_type in ['motivation', 'fact', 'devlog']:
                image_prompt = self._get_image_prompt_for_type(post_type)
                image_url = await self.image_generator.generate_image(image_prompt)

            logger.info(f"–ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: {len(post_content)} —Å–∏–º–≤–æ–ª–æ–≤")

            return {
                'text': post_content,
                'image_url': image_url,
                'type': post_type
            }

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞: {e}")
            fallback_text = self._get_fallback_post(post_type)
            return {
                'text': fallback_text,
                'image_url': None,
                'type': post_type
            }

    def _get_image_prompt_for_type(self, post_type: str) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Ç–∏–ø—É –ø–æ—Å—Ç–∞"""
        if post_type == 'motivation':
            return self.image_generator.get_morning_image_prompt()
        elif post_type == 'fact':
            return self.image_generator.get_fact_image_prompt()
        elif post_type == 'devlog':
            return self.image_generator.get_devlog_image_prompt()
        else:
            return self.image_generator.get_morning_image_prompt()

    def _get_fallback_post(self, post_type: str) -> str:
        """–†–µ–∑–µ—Ä–≤–Ω—ã–µ –ø–æ—Å—Ç—ã –Ω–∞ —Å–ª—É—á–∞–π –æ—à–∏–±–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏"""
        fallback_posts = {
            'motivation': [
                """üåÖ –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –¢–∞–≤–µ—Ä–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞!

–ù–æ–≤—ã–π –¥–µ–Ω—å ‚Äî –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Ä–æ—Å—Ç–∞. –ö–∞–∂–¥—ã–π –±–∞–≥, –∫–æ—Ç–æ—Ä—ã–π –º—ã –∏—Å–ø—Ä–∞–≤–ª—è–µ–º, –∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ –∫–æ–¥–∞, –∫–æ—Ç–æ—Ä—É—é –º—ã –ø–∏—à–µ–º, –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç –Ω–∞—Å –∫ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤—É. –ù–µ –±–æ–π—Ç–µ—Å—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ —É—á–∏—Ç—å—Å—è –Ω–∞ —Å–≤–æ–∏—Ö –æ—à–∏–±–∫–∞—Ö.

"–ú—ã –Ω–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤–µ–ª–∏–∫–∏–º–∏, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –Ω–æ –º—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—á–∞—Ç—å, —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –≤–µ–ª–∏–∫–∏–º–∏."
‚Äî –ó–∏–≥ –ó–∏–≥–ª–∞—Ä

#dev #morningdev #motivation #discipline""",

                """üåÖ –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –¢–∞–≤–µ—Ä–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞!

–°–µ–≥–æ–¥–Ω—è –æ—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è —á–∏—Å—Ç–æ–≥–æ –∫–æ–¥–∞. –ü–æ–º–Ω–∏—Ç–µ: –ª—É—á—à–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–µ —Ç–µ, –∫—Ç–æ –Ω–µ –¥–µ–ª–∞–µ—Ç –æ—à–∏–±–æ–∫, –∞ —Ç–µ, –∫—Ç–æ —É–º–µ–µ—Ç –∏—Ö –±—ã—Å—Ç—Ä–æ –Ω–∞—Ö–æ–¥–∏—Ç—å –∏ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å. –ö–∞–∂–¥—ã–π –≤—ã–∑–æ–≤ ‚Äî —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –ª—É—á—à–µ.

"–ü—Ä–æ—Å—Ç–æ—Ç–∞ ‚Äî —ç—Ç–æ –≤—ã—Å—à–∞—è —Ñ–æ—Ä–º–∞ –∏–∑–æ—â—Ä—ë–Ω–Ω–æ—Å—Ç–∏."
‚Äî –õ–µ–æ–Ω–∞—Ä–¥–æ –¥–∞ –í–∏–Ω—á–∏

#dev #morningdev #motivation #discipline"""
            ],
            'fact': [
                """üîç –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç: –ü–µ—Ä–≤—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–π –±–∞–≥ –±—ã–ª –Ω–∞–π–¥–µ–Ω –≤ 1947 –≥–æ–¥—É –∞–¥–º–∏—Ä–∞–ª–æ–º –ì—Ä–µ–π—Å –•–æ–ø–ø–µ—Ä. –≠—Ç–æ –±—ã–ª–∞ –Ω–∞—Å—Ç–æ—è—â–∞—è –º–æ–ª—å, –∑–∞—Å—Ç—Ä—è–≤—à–∞—è –≤ —Ä–µ–ª–µ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ Harvard Mark II. –ò–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É –ø—Ä–æ—Ü–µ—Å—Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è "debugging" ‚Äî –±—É–∫–≤–∞–ª—å–Ω–æ "—É–¥–∞–ª–µ–Ω–∏–µ –∂—É–∫–æ–≤".

#dev #morningdev #motivation #discipline""",

                """üêç Python –Ω–∞–∑–≤–∞–Ω –≤ —á–µ—Å—Ç—å –±—Ä–∏—Ç–∞–Ω—Å–∫–æ–≥–æ –∫–æ–º–µ–¥–∏–π–Ω–æ–≥–æ —à–æ—É "Monty Python's Flying Circus", –∞ –Ω–µ –≤ —á–µ—Å—Ç—å –∑–º–µ–∏. –ì–≤–∏–¥–æ –≤–∞–Ω –†–æ—Å—Å—É–º, —Å–æ–∑–¥–∞—Ç–µ–ª—å —è–∑—ã–∫–∞, –±—ã–ª –±–æ–ª—å—à–∏–º –ø–æ–∫–ª–æ–Ω–Ω–∏–∫–æ–º —ç—Ç–æ–π –ø–µ—Ä–µ–¥–∞—á–∏ –∏ —Ö–æ—Ç–µ–ª, —á—Ç–æ–±—ã –Ω–∞–∑–≤–∞–Ω–∏–µ —è–∑—ã–∫–∞ –±—ã–ª–æ –∫—Ä–∞—Ç–∫–∏–º –∏ –∑–∞–≥–∞–¥–æ—á–Ω—ã–º.

#dev #morningdev #motivation #discipline"""
            ],
            'devlog': [
                """üí° –°–µ–≥–æ–¥–Ω—è –ø–æ—Ç—Ä–∞—Ç–∏–ª —Ç—Ä–∏ —á–∞—Å–∞ –Ω–∞ –æ—Ç–ª–∞–¥–∫—É –æ–¥–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏. –û–∫–∞–∑–∞–ª–æ—Å—å, –ø—Ä–æ–±–ª–µ–º–∞ –±—ã–ª–∞ –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ–Ω–∏–º–∞–Ω–∏–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π. –£—Ä–æ–∫: –∏–Ω–æ–≥–¥–∞ –ª—É—á—à–µ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –∞–Ω–∞–ª–∏–∑ –∑–∞–¥–∞—á–∏, —á–µ–º –Ω–∞ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –∫–æ–¥–∞. –•–æ—Ä–æ—à–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã.

#dev #morningdev #motivation #discipline""",

                """üïØÔ∏è –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–¥–∞ ‚Äî —ç—Ç–æ –∫–∞–∫ –∞—Ä—Ö–µ–æ–ª–æ–≥–∏—è. –ö–∞–∂–¥—ã–π —Å–ª–æ–π –∫–æ–¥–∞ —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–∏–Ω—è—Ç—ã—Ö —Ä–µ—à–µ–Ω–∏–π. –°–µ–≥–æ–¥–Ω—è –ø–æ–Ω—è–ª, —á—Ç–æ —Ö–æ—Ä–æ—à–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è ‚Äî —ç—Ç–æ –ø–∏—Å—å–º–æ –±—É–¥—É—â–µ–º—É —Å–µ–±–µ. –ü–∏—à–∏—Ç–µ –∫–æ–¥ —Ç–∞–∫, –∫–∞–∫ –±—É–¥—Ç–æ –µ–≥–æ –±—É–¥–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤–∞—à –∑–ª–µ–π—à–∏–π –≤—Ä–∞–≥, –∑–Ω–∞—é—â–∏–π, –≥–¥–µ –≤—ã –∂–∏–≤–µ—Ç–µ.

#dev #morningdev #motivation #discipline"""
            ]
        }

        return random.choice(fallback_posts.get(post_type, fallback_posts['motivation']))

    def get_post_type_for_time(self, hour: int) -> str:
        """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –ø–æ—Å—Ç–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏"""
        if hour == 8:
            return 'motivation'  # –£—Ç—Ä–µ–Ω–Ω–∏–µ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
        elif hour == 14:
            return random.choice(['fact', 'meme'])
        elif hour == 19:
            return random.choice(['devlog', 'fact'])
        else:
            return random.choice(Config.POST_TYPES)